// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=in[0],sel=address[12..13],a=Rai0,b=Rbi0,c=Rci0,d=Rdi0);
    DMux4Way(in=in[1],sel=address[12..13],a=Rai1,b=Rbi1,c=Rci1,d=Rdi1);
    DMux4Way(in=in[2],sel=address[12..13],a=Rai2,b=Rbi2,c=Rci2,d=Rdi2);
    DMux4Way(in=in[3],sel=address[12..13],a=Rai3,b=Rbi3,c=Rci3,d=Rdi3);
    DMux4Way(in=in[4],sel=address[12..13],a=Rai4,b=Rbi4,c=Rci4,d=Rdi4);
    DMux4Way(in=in[5],sel=address[12..13],a=Rai5,b=Rbi5,c=Rci5,d=Rdi5);
    DMux4Way(in=in[6],sel=address[12..13],a=Rai6,b=Rbi6,c=Rci6,d=Rdi6);
    DMux4Way(in=in[7],sel=address[12..13],a=Rai7,b=Rbi7,c=Rci7,d=Rdi7);
    DMux4Way(in=in[8],sel=address[12..13],a=Rai8,b=Rbi8,c=Rci8,d=Rdi8);
    DMux4Way(in=in[9],sel=address[12..13],a=Rai9,b=Rbi9,c=Rci9,d=Rdi9);
    DMux4Way(in=in[10],sel=address[12..13],a=Rai10,b=Rbi10,c=Rci10,d=Rdi10);
    DMux4Way(in=in[11],sel=address[12..13],a=Rai11,b=Rbi11,c=Rci11,d=Rdi11);
    DMux4Way(in=in[12],sel=address[12..13],a=Rai12,b=Rbi12,c=Rci12,d=Rdi12);
    DMux4Way(in=in[13],sel=address[12..13],a=Rai13,b=Rbi13,c=Rci13,d=Rdi13);
    DMux4Way(in=in[14],sel=address[12..13],a=Rai14,b=Rbi14,c=Rci14,d=Rdi14);
    DMux4Way(in=in[15],sel=address[12..13],a=Rai15,b=Rbi15,c=Rci15,d=Rdi15);

    DMux4Way(in=load,sel=address[12..13],a=loada,b=loadb,c=loadc,d=loadd);



    RAM4K(in[0]=Rai0,in[1]=Rai1,in[2]=Rai2,in[3]=Rai3,in[4]=Rai4,in[5]=Rai5,in[6]=Rai6,in[7]=Rai7,in[8]=Rai8,in[9]=Rai9,in[10]=Rai10,in[11]=Rai11,in[12]=Rai12,in[13]=Rai13,in[14]=Rai14,in[15]=Rai15,load=loada,address[0..11]=address[0..11],out[0]=Rao0,out[1]=Rao1,out[2]=Rao2,out[3]=Rao3,out[4]=Rao4,out[5]=Rao5,out[6]=Rao6,out[7]=Rao7,out[8]=Rao8,out[9]=Rao9,out[10]=Rao10,out[11]=Rao11,out[12]=Rao12,out[13]=Rao13,out[14]=Rao14,out[15]=Rao15);
    RAM4K(in[0]=Rbi0,in[1]=Rbi1,in[2]=Rbi2,in[3]=Rbi3,in[4]=Rbi4,in[5]=Rbi5,in[6]=Rbi6,in[7]=Rbi7,in[8]=Rbi8,in[9]=Rbi9,in[10]=Rbi10,in[11]=Rbi11,in[12]=Rbi12,in[13]=Rbi13,in[14]=Rbi14,in[15]=Rbi15,load=loadb,address[0..11]=address[0..11],out[0]=Rbo0,out[1]=Rbo1,out[2]=Rbo2,out[3]=Rbo3,out[4]=Rbo4,out[5]=Rbo5,out[6]=Rbo6,out[7]=Rbo7,out[8]=Rbo8,out[9]=Rbo9,out[10]=Rbo10,out[11]=Rbo11,out[12]=Rbo12,out[13]=Rbo13,out[14]=Rbo14,out[15]=Rbo15);
    RAM4K(in[0]=Rci0,in[1]=Rci1,in[2]=Rci2,in[3]=Rci3,in[4]=Rci4,in[5]=Rci5,in[6]=Rci6,in[7]=Rci7,in[8]=Rci8,in[9]=Rci9,in[10]=Rci10,in[11]=Rci11,in[12]=Rci12,in[13]=Rci13,in[14]=Rci14,in[15]=Rci15,load=loadc,address[0..11]=address[0..11],out[0]=Rco0,out[1]=Rco1,out[2]=Rco2,out[3]=Rco3,out[4]=Rco4,out[5]=Rco5,out[6]=Rco6,out[7]=Rco7,out[8]=Rco8,out[9]=Rco9,out[10]=Rco10,out[11]=Rco11,out[12]=Rco12,out[13]=Rco13,out[14]=Rco14,out[15]=Rco15);
    RAM4K(in[0]=Rdi0,in[1]=Rdi1,in[2]=Rdi2,in[3]=Rdi3,in[4]=Rdi4,in[5]=Rdi5,in[6]=Rdi6,in[7]=Rdi7,in[8]=Rdi8,in[9]=Rdi9,in[10]=Rdi10,in[11]=Rdi11,in[12]=Rdi12,in[13]=Rdi13,in[14]=Rdi14,in[15]=Rdi15,load=loadd,address[0..11]=address[0..11],out[0]=Rdo0,out[1]=Rdo1,out[2]=Rdo2,out[3]=Rdo3,out[4]=Rdo4,out[5]=Rdo5,out[6]=Rdo6,out[7]=Rdo7,out[8]=Rdo8,out[9]=Rdo9,out[10]=Rdo10,out[11]=Rdo11,out[12]=Rdo12,out[13]=Rdo13,out[14]=Rdo14,out[15]=Rdo15);
    

    Mux4Way16(a[0]=Rao0,a[1]=Rao1,a[2]=Rao2,a[3]=Rao3,a[4]=Rao4,a[5]=Rao5,a[6]=Rao6,a[7]=Rao7,a[8]=Rao8,a[9]=Rao9,a[10]=Rao10,a[11]=Rao11,a[12]=Rao12,a[13]=Rao13,a[14]=Rao14,a[15]=Rao15,
    b[0]=Rbo0,b[1]=Rbo1,b[2]=Rbo2,b[3]=Rbo3,b[4]=Rbo4,b[5]=Rbo5,b[6]=Rbo6,b[7]=Rbo7,b[8]=Rbo8,b[9]=Rbo9,b[10]=Rbo10,b[11]=Rbo11,b[12]=Rbo12,b[13]=Rbo13,b[14]=Rbo14,b[15]=Rbo15,
    c[0]=Rco0,c[1]=Rco1,c[2]=Rco2,c[3]=Rco3,c[4]=Rco4,c[5]=Rco5,c[6]=Rco6,c[7]=Rco7,c[8]=Rco8,c[9]=Rco9,c[10]=Rco10,c[11]=Rco11,c[12]=Rco12,c[13]=Rco13,c[14]=Rco14,c[15]=Rco15,
    d[0]=Rdo0,d[1]=Rdo1,d[2]=Rdo2,d[3]=Rdo3,d[4]=Rdo4,d[5]=Rdo5,d[6]=Rdo6,d[7]=Rdo7,d[8]=Rdo8,d[9]=Rdo9,d[10]=Rdo10,d[11]=Rdo11,d[12]=Rdo12,d[13]=Rdo13,d[14]=Rdo14,d[15]=Rdo15,sel=address[12..13],out=out[0..15]);
}